@startuml
actor User
User -> Main: Enter saveManager
activate Main
Main -> SaveManager: main()
activate SaveManager
SaveManager --> User: Await input
User -> SaveManager: add save /name
SaveManager -> SaveManager: checkValidity()
activate SaveManager
alt Invalid
SaveManager --> SaveManager: invalid
deactivate SaveManager
SaveManager --> User: Invalid Command
else valid
activate SaveManager
SaveManager --> SaveManager: valid
deactivate SaveManager
SaveManager -> SaveManager: addSave()
activate SaveManager
SaveManager -> AutoTrackerSaver: save()
activate AutoTrackerSaver
end
AutoTrackerSaver -> RecurringTracker: getEntries()
activate RecurringTracker
RecurringTracker --> AutoTrackerSaver: entries
deactivate RecurringTracker
AutoTrackerSaver -> Filewriter: create text file
activate Filewriter
Filewriter --> AutoTrackerSaver: close()
deactivate Filewriter
AutoTrackerSaver -->SaveManager
deactivate AutoTrackerSaver
ref over SaveManager, ManualTrackerSaver, GoalTrackerSaver
Save ManualTracker and GoalTracker states just like saving RecurringTracker
end ref
alt Dublicate found in name.txt
loop has not reached the end of file name.txt
SaveManager -> File: Scanner.nextLine()
activate File
File --> SaveManager: saveString
deactivate File
SaveManager --> User: Await input
end
else No dublicate found in name.txt
SaveManager -> Filewriter: Append(): /name
activate Filewriter
Filewriter -->SaveManager: close()
deactivate Filewriter
SaveManager --> User: Await input
deactivate SaveManager
end

User -> SaveManager: load save /name
SaveManager -> SaveManager: checkValidity()
activate SaveManager
alt Invalid
SaveManager --> SaveManager: invalid
deactivate SaveManager
SaveManager --> User: Invalid Command
else valid
activate SaveManager
SaveManager --> SaveManager: valid
deactivate SaveManager
SaveManager -> SaveManager: loadSave()
activate SaveManager
end
alt name.txt contain /name
loop 3 times for GoalTracker.txt, ManualTracker.txt and AutoTracker.txt
SaveManager -> FileChannel: transferFrom(): backup source file to save.txt destination file
activate FileChannel
FileChannel --> SaveManager: close()
deactivate FileChannel
SaveManager --> User: Await input, prompt: name has been loaded, restart

end
else name.txt does not contain /name
SaveManager --> User: Await input, prompt: name cannot be found
deactivate SaveManager
end
User -> SaveManager: exit
SaveManager --> Main: exit: load = true
deactivate SaveManager
Main --> User: Await input
User -> Main: exit
Main --> User
deactivate Main



@enduml

Alice -> Bob: Authentication Request
Bob --> Alice: Authentication Response

Alice -> Bob: Another authentication Request
Alice <-- Bob: another authentication Response