@startuml
left to right direction
hide circle
scale 1094 width
skinparam classAttributeIconSize 0
skinparam BoxPadding 20
skinparam shadowing false
skinparam linetype ortho
skinparam package<<Layout>> {
  borderColor Transparent
  backgroundColor Transparent
  fontColor Transparent
  stereotypeFontColor Transparent
}

rectangle Logic {

    package p1 <<Layout>> {
    }

    package p2 <<Layout>> {
    }

    package p3 <<Layout>> {
    }


    class ParamChecker <<Singleton>>{
        + checkAndReturnDate(paramType : String) : LocalDate
        + checkAndReturnTime(paramType : String) : LocalTime
        + checkAndReturnIndex(paramType : String, list : ArrayList) : Integer
        + checkAndReturnDouble(paramType : String) : Double
        + checkAndReturnInt(paramType : String) : Integer
        + checkAndReturnCategory(paramType : String) : String
    }


    p1 -[hidden] p2
    p2 -[hidden] p3
    p2 -[hidden] ParamChecker


rectangle "CommandHandlers"    {
    abstract class ParamHandler {

        + handleParams(packet : CommandPacket) : void
        + {abstract} handleSingleParam(packet : CommandPacket, paramType : String)
    }

    rectangle "Ledger CommandHandlers"    {
        class createLedgerCommand <<Singleton>>{
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class retrieveLedgerCommand <<Singleton>>{
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
    }

    package p4 <<Layout>> {
    }

    rectangle "Entry CommandHandlers"    {
        class createEntryCommand <<Singleton>>{
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class editEntryHandler <<Singleton>>{
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class retrieveEntryHandler <<Singleton>>{
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
    }

    "Entry CommandHandlers"    -[hidden]- p4
    ParamChecker -[hidden]- ParamHandler
}
note top of ParamChecker : dfdfd
"CommandHandlers"    -[hidden]down- Logic

ParamChecker "1" <.[norank]. createLedgerCommand #line:blue;text:black
ParamChecker "1" <.[norank]. retrieveLedgerCommand #line:blue;text:black
ParamChecker "1" <.[norank]. createEntryCommand #line:blue;text:black
ParamChecker "1" <.[norank]. editEntryHandler #line:blue;text:black
ParamChecker "1" <.[norank]. retrieveEntryHandler #line:blue;text:black
ParamHandler <|-[norank]- createLedgerCommand #line:purple;line.bold;text:red
ParamHandler <|-[norank]- retrieveLedgerCommand #line:purple;line.bold;text:red
ParamHandler <|-[norank]- createEntryCommand #line:purple;line.bold;text:red
ParamHandler <|-[norank]- retrieveEntryHandler #line:purple;line.bold;text:red
ParamHandler <|-[norank]- editEntryHandler #line:purple;line.bold;text:red
}

@enduml