@startuml
autoactivate on

actor User
skinparam shadowing false
skinparam sequence {
ActorBorderColor white

ActorBackgroundColor white
ActorFontColor white
ActorFontSize 17
ActorFontName ""
}
User-> ":ManualTracker": Delete Ledger

":ManualTracker" ->":ManualTracker": handleDeleteLedger()
   note left "ledger:Ledger" : "Note: Suppose this ledger instance\n will be referenced then removed."
   ":ManualTracker"-> "retrieveLedgerHandler:retrieveLedgerHandler" : retrieveLedgerHandler.getInstance()
   return retrieveLedgerHandler.handler

   ":ManualTracker"-> "retrieveLedgerHandler:retrieveLedgerHandler" : handlePacket(packet)
        == Handling of Params in packet for retrieval ==
        "retrieveLedgerHandler:retrieveLedgerHandler" -> "retrieveLedgerHandler:retrieveLedgerHandler" : handleParams(packet)
            "retrieveLedgerHandler:retrieveLedgerHandler" -> ":ParamChecker" : setPacket(packet)
            return
            loop For all paramType in the command packet
                note left: "Note: Params will be verified for correctness\nby ParamChecker singleton class before being\nset into the ledger instance."
                "retrieveLedgerHandler:retrieveLedgerHandler" -> "retrieveLedgerHandler:retrieveLedgerHandler" : handleSingleParam
                    alt "paramType = PARAM_DATE"
                        "retrieveLedgerHandler:retrieveLedgerHandler" ->":ParamChecker": checkAndReturnDate(paramType)
                        return date
                        "retrieveLedgerHandler:retrieveLedgerHandler" -> "ledgerList:LedgerList" : getIndexFromDate(date)
                        return index
                        note left: "Note: Set index to modify at entry list\nso that the entry of interest can be retrieved via regular\ngetter methods from entrylist"
                        "retrieveLedgerHandler:retrieveLedgerHandler" -> "ledgerList:LedgerList" : setIndexToModify(index)
                        return
                    else "paramType = PARAM_INDEX"
                        "retrieveLedgerHandler:retrieveLedgerHandler" ->":ParamChecker": checkAndReturnIndex(paramType, entryList)
                        return index
                        "retrieveLedgerHandler:retrieveLedgerHandler" -> "ledgerList:LedgerList" : setIndexToModify(index)
                        return
                    end
                return
            end
        return
   return
   == Removal of retrieved ledger from ledgerList ==
   ":ManualTracker"-> "ledgerList:LedgerList" : removeItemAtCurrIndex()
   note left "ledger:Ledger": "Note: The retrieved ledger will be deleted here."
   destroy "ledger:Ledger"
   return
return state
return

box "Data Tracker" #LightYellow
participant ":ManualTracker"
endBox

box "Logic" #LightBlue
participant "retrieveLedgerHandler:retrieveLedgerHandler"
participant ":ParamChecker"
endBox

box "Data" #LightGreen
participant "ledger:Ledger"
participant "ledgerList:LedgerList"
endBox
@enduml