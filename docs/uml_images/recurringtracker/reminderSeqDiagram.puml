@startuml
autoactivate on

":FinanceIt" -> "<<class>>\nMenuPrinter"
    "<<class>>\nMenuPrinter" -> "<<class>>\nReminderListGenerator": generateListOfRemindersAsStrings()
        "<<class>>\nReminderListGenerator" -> "<<class>>\nRunHistory": getCurrentDayOfMonth();
        return currentDayOfMonth
        "<<class>>\nReminderListGenerator" -> "<<class>>\nRunHistory": getNumOfDaysInCurrentMonth();
        return lastDayOfMonth

        alt isOverflowToNextMonth == false
            "<<class>>\nReminderListGenerator" -> "allRecurringEntries:RecurringEntriesList": getEntriesFromDayXtoY(currentDay, dayToRemindUntil)
            return entriesToRemind
        else isOverflowToNextMonth == true
            "<<class>>\nReminderListGenerator" -> "allRecurringEntries:RecurringEntriesList": getEntriesFromDayXtoY(currentDay, lastDayOfMonth)
            return entriesToRemind
             "<<class>>\nReminderListGenerator" -> "allRecurringEntries:RecurringEntriesList": getEntriesFromDayXtoY(1, dayToRemindUntil)
            return entriesToRemind
        end

        loop For all entries in entriesToRemind
        "<<class>>\nReminderListGenerator" -> "<<class>>\nReminderListGenerator": convertEntryToReminderString(entry)"
        return reminderString

        end
    return remindersToPrint
    "<<class>>\nMenuPrinter" -> "<<class>>\nUiManager": printWithStatusIcon(\nPrintType.//REMINDER//, \nremindersToPrint)
return

box "UI" #Pink
participant "<<class>>\nMenuPrinter"
participant "<<class>>\nUiManager"
endbox

box "Logic" #LightBlue
participant "<<class>>\nReminderListGenerator"
endbox

box "Data" #LightGreen
participant "<<class>>\nRunHistory"
participant "allRecurringEntries:RecurringEntriesList"
endbox
@enduml