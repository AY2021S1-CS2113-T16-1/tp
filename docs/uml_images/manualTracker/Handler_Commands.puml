@startuml
hide circle
skinparam classAttributeIconSize 0
skinparam BoxPadding 20
skinparam shadowing false

skinparam package<<Layout>> {
  borderColor Transparent
  backgroundColor Transparent
  fontColor Transparent
  stereotypeFontColor Transparent
}

rectangle Handler {
    class ManualTracker {
        ~ {static} handleCreateLedger() : State
        ~ {static} handleOpenLedger() : State
        ~ {static} handleDeleteLedger() : State
    }

    class EntryTracker {
        ~ {static} handleCreateEntry() : State
        ~ {static} handleEditEntry() : State
        ~ {static} handleDeleteEntry() : State
    }
}

rectangle Commands {
    rectangle LedgerCommands {
        class createLedgerCommand {
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class retrieveLedgerCommand {
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        ManualTracker --> createLedgerCommand
        ManualTracker --> retrieveLedgerCommand
    }

    rectangle EntryCommands {
        class createEntryCommand {
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class editEntryHandler {
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        class retrieveEntryHandler {
            + handlePacket() : void
            + handleSingleParams(paramType : String) : void
            + handleParams(packet : CommandPacket) : void
        }
        EntryTracker --> createEntryCommand
        EntryTracker --> retrieveEntryHandler
        EntryTracker --> editEntryHandler

    }
}

@enduml